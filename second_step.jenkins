properties([disableConcurrentBuilds()])

pipeline {
  agent any

  options {
    buildDiscarder(logRotator(numToKeepStr: '10', artifactNumToKeepStr: '10'))
    timestamps()
  }

  stages {
    stage ('DeployToStaging') {
      steps {
        echo "Piska"
      }
    }
    stage('DeployToStaging') {
      when {
          branch 'master'
      }
      steps {
        withCredentials([usernamePassword(credentialsId: 'webserver_login', usernameVariable: 'USERNAME', passwordVariable: 'USERPASS')]) {
          sshPublisher(
            failOnError: true,
            continueOnError: false,
            publishers: [
              sshPublisherDesc(
                configName: 'staging',
                sshCredentials: [
                  username: "$USERNAME",
                  encryptedPassphrase: "$USERPASS"
                ], 
                transfers: [
                  sshTransfer(
                    sourceFiles: 'index.js',
                    removePrefix: 'dist/',
                    remoteDirectory: '/tmp',
                    execCommand: 'sudo /usr/bin/systemctl stop train-schedule && rm -rf /opt/train-schedule/* && unzip /tmp/trainSchedule.zip -d /opt/train-schedule && sudo /usr/bin/systemctl start train-schedule'
                  )
                ]
              )
            ]
          )
        }
      }
    }
    stage('Build Docker Image') {
            when {
                branch 'master'
            }
            steps {
                script {
                    app = docker.build("nikookin/test")
                    app.inside {
                        sh 'echo $(curl localhost:8080)'
                    }
                }
            }
        }
  }
}